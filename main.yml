---
- hosts: "{{ host }}"
  tasks:
    - stat: path=/etc/yum.repos.d/elrepo.repo
      register: elrepo_result
      ignore_errors: yes 
      tags: init

    - name: 1. template /etc/hosts
      template: src=template/hosts.j2 dest=/tmp/hosts
      tags: init

    - name: 1. adjuest centos7 system
      shell: 
        setenforce 0;
        timedatectl set-timezone Asia/Shanghai;
        timedatectl set-ntp 0;
        timedatectl set-local-rtc 0;
        ntpdate -u -o3 192.168.12.10; 
        swapoff -a;
        sed -r -i "/k8s/d" /etc/hosts;  
        cat /tmp/hosts >> /etc/hosts;
        hostnamectl --static set-hostname "{{inventory_hostname}}";  
        localectl set-locale LANG=en_US.UTF8;
        echo -e "{{inventory_hostname}}" > /etc/hostname;
        echo -e 'LANG=en_US.utf8\nLC_CTYPE=en_US.utf8' > /etc/locale.conf;
        echo -e '*\t\tsoft\t\tnproc\t\t10240\nroot\t\tsoft\t\tproc\t\tunlimited' > /etc/security/limits.d/20-nproc.conf;
        echo -e '0 * * * * root (/usr/sbin/ntpdate -u -o3 192.168.12.10 211.115.194.21 133.100.11.8)' > /etc/cron.d/upyun;
        echo -e 'net.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nvm.swappiness=0' > /etc/sysctl.d/k8s.conf;
        echo -e 'nameserver 192.168.12.10\nnameserver 192.168.21.20\nnameserver 114.114.114.114' > /etc/resolv.conf;
        sed -r -i '/obsoletes/s^=.*^=0^g' /etc/yum.conf;
        sed -r -i '/update_hostname/s@^@#@g' /etc/cloud/cloud.cfg;
        sed -r -i '/^SELINUX=/s^=.*^=disabled^g' /etc/selinux/config;
        sed -r -i '/^[^root]/s:/bin/bash:/sbin/nologin:g' /etc/passwd;
        sed -r -i '/#Port 22/s^.*^Port 65422^g;/^PasswordAuthentication/s^yes^no^g' /etc/ssh/sshd_config;
        sed -r -i -e '/DefaultLimitCORE/s^.*^DefaultLimitCORE=infinity^g' -e '/DefaultLimitNOFILE/s^.*^DefaultLimitNOFILE=100000^g' -e '/DefaultLimitNPROC/s^.*^DefaultLimitNPROC=100000^g' /etc/systemd/system.conf;
        chattr +i /etc/resolv.conf;
      tags: init

    - name: 2. install epel and kernel-ml
      shell:
        rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org;
        rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm;
        yum makecache fast;
        yum --enablerepo=elrepo-kernel -y install kernel-ml;
      when: elrepo_result.stat.exists == False
      tags: init

    - name: 3. install linux base software
      yum: name={{item}} state=installed
      with_items:
        - tree
        - ntpdate
        - telnet
        - bc
        - nc
        - net-tools
        - wget
        - lsof
        - rsync
        - bash-completion
        - iptables-services
        - bind-utils
        - python-setuptools
        - yum-utils
        - docker
      tags: init

    - name: 3. install etcd,flannel,kubernetes
      yum: name={{item}} state=installed
      with_items:
        - etcd
        - flannel
        - kubernetes
      tags: k8s

    - name: 4. config docker setting
      shell:
        cp -n /lib/systemd/system/docker.service /etc/systemd/system/docker.service;
        sed -r -i "s|ExecStart=/usr/bin/docker-current .*|ExecStart=/usr/bin/docker-current daemon --registry-mirror={{Docker_Mirror}} \\\\|g" /etc/systemd/system/docker.service;
        sed -r -i "/ExecStartPost=.*iptables -I FORWARD -s 0.0.0.0.*-j ACCEPT/d" /etc/systemd/system/docker.service;
        sed -r -i "/ExecStart=/i ExecStartPost=/usr/sbin/iptables -I FORWARD -s 0.0.0.0/0 -j ACCEPT" /etc/systemd/system/docker.service;
        systemctl daemon-reload;
      tags:
        - init
        - docker

    - name: 4. template docker config
      template: src=template/docker.j2 dest=/etc/sysconfig/docker
      tags:
        - init
        - docker

    - name: 4. template etcd config
      template: src=template/etcd.conf.j2 dest=/etc/etcd/etcd.conf
      tags:
        - k8s
        - etcd
      when:
        ETCD == "yes"

    - name: 4. template flanneld config
      template: src=template/flanneld.j2 dest=/etc/sysconfig/flanneld
      tags:
        - k8s
        - flannel

    - name: 4. template kube-apiserver config
      template: src=template/kube-apiserver.j2 dest=/etc/kubernetes/apiserver
      tags:
        - k8s
      when:
        K8S == "master" or K8S == "both"

    - name: 4. template kube-config config
      template: src=template/kube-config.j2 dest=/etc/kubernetes/config
      tags:
        - k8s
      when:
        K8S == "master" or K8S == "slave" or K8S == "both"

    - name: 4. template kubelet config
      template: src=template/kubelet.j2 dest=/etc/kubernetes/kubelet
      tags:
        - k8s
      when:
        K8S == "slave" or K8S == "both"

    - name: 5. disable some service
      service: name={{item}} state=stopped enabled=no
      with_items:
        - firewalld
        - postfix
        - auditd
        - tuned
      ignore_errors: yes 
      tags:
        - init

    - name: 5. enable etcd service
      service: name=etcd state=restarted enabled=yes
      tags:
        - k8s
        - etcd
      when:
        ETCD == "yes"

    - name: 5. set flanneld network
      shell: etcdctl get /upyun.com/network/config
      register: etcd_result
      tags:
        - k8s
        - flannel
      when:
        ETCD == "yes"

    - name: 5. set flanneld network
      shell: etcdctl mk /upyun.com/network/config '{"Network":"{{Flannel_IPS}}"}'
      tags:
        - k8s
        - flannel
      when:
        ETCD == "yes" and etcd_result.rc != 0

    - name: 5. enable service
      service: name={{item}} state=restarted enabled=yes
      tags:
        - init
      with_items:
        - network
        - irqbalance
        - docker

    - name: 5. enable service
      service: name={{item}} state=restarted enabled=yes
      tags:
        - k8s
      with_items:
        - flanneld
        - kube-apiserver
        - kube-controller-manager
        - kube-scheduler
      when:
        K8S == "master" or K8S == "both"

    - name: 5. enable service
      service: name={{item}} state=restarted enabled=yes
      tags:
        - k8s
      with_items:
        - flanneld
        - kubelet
        - kube-proxy
      when:
        K8S == "slave" or K8S == "both"
